<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sandyz.bobtimerserver.mapper.ArticleMapper">
    <resultMap id="BaseResultMap" type="com.sandyz.bobtimerserver.vo.ArticleVO">
        <!--@mbg.generated-->
        <!--@Table article-->
        <id column="article_id" jdbcType="INTEGER" property="articleId"/>
        <result column="user_id" jdbcType="INTEGER" property="userId"/>
        <result column="submit_time" jdbcType="TIMESTAMP" property="submitTime"/>
        <result column="text" jdbcType="VARCHAR" property="text"/>
        <result column="topic" jdbcType="VARCHAR" property="topic"/>
        <result column="praise_count" jdbcType="INTEGER" property="praiseCount"/>
        <result column="comment_count" jdbcType="INTEGER" property="commentCount"/>
        <result column="is_praised" jdbcType="INTEGER" property="isPraised"/>
    </resultMap>
    <sql id="Base_Column_List">
        <!--@mbg.generated-->
        article_id, user_id, submit_time, `text`, topic
    </sql>


    <!--  <sql id="ArticleVOList">-->
    <!--    &lt;!&ndash;@mbg.generated&ndash;&gt;-->
    <!--    a.article_id as article_id, a.user_id as user, a.submit_time, a.`text`, a.topic,-->
    <!--    u.id, u.stu_id, u.school_id, u.nickname, u.register_date, u.sex, u.`text`, u.avatar_url, u.is_admin-->
    <!--  </sql>-->

    <sql id="PraisedUserInfo">
        pu.id            AS praise_user_id,
        pu.stu_id        AS praise_stu_id,
        pu.school_id     AS praise_school_id,
        pu.nickname      AS praise_nickname,
        pu.register_date AS praise_register_date,
        pu.sex           AS praise_sex,
        pu.text          AS praise_text,
        pu.avatar_url    AS praise_avatar_url,
        pu.is_admin      AS praise_is_admin,
        (SELECT COUNT(*) FROM praise p WHERE p.id = a.article_id AND p.which = 0) AS praise_count,
        (SELECT COUNT(*) FROM comment c WHERE c.reply_id = a.article_id AND c.which = 1) AS comment_count,
        EXISTS (SELECT * FROM praise p WHERE p.user_id = #{userId,jdbcType=INTEGER} AND p.id = a.article_id AND p.which = 0) AS is_praised
<!--        count(p.id)      AS praise_count-->
    </sql>

    <sql id="UserInfo">
        u.id            as id,
        u.stu_id        as stu_id,
        u.school_id     as school_id,
        u.nickname      as nickname,
        u.register_date as register_date,
        u.sex           as sex,
        u.`text`        as `u_text`,
        u.avatar_url    as avatar_url,
        u.is_admin      as is_admin
    </sql>


    <sql id="ArticleVOList_Common_List">
        a.article_id    as article_id,
        a.user_id       as user_id,
        a.submit_time   as submit_time,
        a.`text`        as `text`,
        a.topic         as topic,
        <include refid="UserInfo"/>,
        i.pic_url       as pic_url,
        <include refid="PraisedUserInfo"/>
    </sql>

    <sql id="Require_Praise_List">
        left join (
                select p2.id, p2.user_id as pid_limited, p2.praise_time
                from praise p2
                where p2.which = 0
                order by p2.praise_time desc
                limit 2
                ) p_limited on p_limited.id = a.article_id
        left join user pu
            on pid_limited = pu.id
    </sql>


    <resultMap id="ArticleVOResultMap" type="com.sandyz.bobtimerserver.vo.ArticleVO" extends="BaseResultMap">
        <association property="authorUser" javaType="com.sandyz.bobtimerserver.vo.UserInfoVO">
            <result property="userId" column="id"/>
            <result property="stuId" column="stu_id"/>
            <result property="schoolId" column="school_id"/>
            <result property="nickname" column="nickname"/>
            <result property="registerDate" column="register_date"/>
            <result property="sex" column="sex"/>
            <result property="text" column="u_text"/>
            <result property="avatarUrl" column="avatar_url"/>
            <result property="isAdmin" column="is_admin"/>
        </association>

        <collection property="images" ofType="String">
            <result column="pic_url"/>
        </collection>
        <collection property="praiseUsers" ofType="com.sandyz.bobtimerserver.vo.UserInfoVO">
            <result property="userId" column="praise_user_id"/>
            <result property="stuId" column="praise_stu_id"/>
            <result property="schoolId" column="praise_school_id"/>
            <result property="nickname" column="praise_nickname"/>
            <result property="registerDate" column="praise_register_date"/>
            <result property="sex" column="praise_sex"/>
            <result property="text" column="praise_text"/>
            <result property="avatarUrl" column="praise_avatar_url"/>
            <result property="isAdmin" column="praise_is_admin"/>
        </collection>
    </resultMap>


    <select id="getArticles" resultMap="ArticleVOResultMap">
        select
        <include refid="ArticleVOList_Common_List"/>
        from article a
            join user u
                 on a.user_id = u.id
            left join pic i
                      on a.article_id = i.article_id
        <include refid="Require_Praise_List"/>

        where topic = #{topic,jdbcType=VARCHAR}
        order by submit_time desc, p_limited.praise_time desc
    </select>


    <select id="getArticlesAll" resultMap="ArticleVOResultMap">
        select
        <include refid="ArticleVOList_Common_List"/>
        from article a
                 join user u
                      ON a.user_id = u.id
                 left join pic i
                           ON a.article_id = i.article_id
        <include refid="Require_Praise_List"/>
        order by submit_time desc, p_limited.praise_time desc
    </select>


    <select id="getArticleById" resultMap="ArticleVOResultMap">
        select
        <include refid="ArticleVOList_Common_List"/>
        from article a
                 join user u
                      ON a.user_id = u.id
                 left join pic i
                           ON a.article_id = i.article_id
        <include refid="Require_Praise_List"/>
        where a.article_id = #{articleId,jdbcType=VARCHAR}
        order by submit_time desc, p_limited.praise_time desc
    </select>

    <select id="getArticlesByUserId" resultMap="ArticleVOResultMap">
        select
        <include refid="ArticleVOList_Common_List"/>
        from article a
                 join user u
                      ON a.user_id = u.id
                 left join pic i
                           ON a.article_id = i.article_id
        <include refid="Require_Praise_List"/>
        where a.user_id = #{userId,jdbcType=INTEGER}
        order by submit_time desc, p_limited.praise_time desc
    </select>


<!--    <insert id="postArticle" keyColumn="article_id" keyProperty="articleId"-->
<!--            parameterType="com.sandyz.bobtimerserver.pojo.Article" useGeneratedKeys="true">-->
<!--        &lt;!&ndash;@mbg.generated&ndash;&gt;-->
<!--        insert into article (user_id, submit_time, `text`,-->
<!--                             topic)-->
<!--        values (#{userId,jdbcType=INTEGER}, #{submitTime,jdbcType=TIMESTAMP}, #{text,jdbcType=VARCHAR},-->
<!--                #{topic,jdbcType=VARCHAR})-->
<!--    </insert>-->


    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        <!--@mbg.generated-->
        select
        <include refid="Base_Column_List"/>
        from article
        where article_id = #{articleId,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        <!--@mbg.generated-->
        delete
        from article
        where article_id = #{articleId,jdbcType=INTEGER}
    </delete>
    <insert id="insert" keyColumn="article_id" keyProperty="articleId"
            parameterType="com.sandyz.bobtimerserver.pojo.Article" useGeneratedKeys="true">
        <!--@mbg.generated-->
        insert into article (user_id, submit_time, `text`,
                             topic)
        values (#{userId,jdbcType=INTEGER}, #{submitTime,jdbcType=TIMESTAMP}, #{text,jdbcType=VARCHAR},
                #{topic,jdbcType=VARCHAR})
    </insert>
    <insert id="insertSelective" keyColumn="article_id" keyProperty="articleId"
            parameterType="com.sandyz.bobtimerserver.pojo.Article" useGeneratedKeys="true">
        <!--@mbg.generated-->
        insert into article
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="userId != null">
                user_id,
            </if>
            <if test="submitTime != null">
                submit_time,
            </if>
            <if test="text != null">
                `text`,
            </if>
            <if test="topic != null">
                topic,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="userId != null">
                #{userId,jdbcType=INTEGER},
            </if>
            <if test="submitTime != null">
                #{submitTime,jdbcType=TIMESTAMP},
            </if>
            <if test="text != null">
                #{text,jdbcType=VARCHAR},
            </if>
            <if test="topic != null">
                #{topic,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.sandyz.bobtimerserver.pojo.Article">
        <!--@mbg.generated-->
        update article
        <set>
            <if test="userId != null">
                user_id = #{userId,jdbcType=INTEGER},
            </if>
            <if test="submitTime != null">
                submit_time = #{submitTime,jdbcType=TIMESTAMP},
            </if>
            <if test="text != null">
                `text` = #{text,jdbcType=VARCHAR},
            </if>
            <if test="topic != null">
                topic = #{topic,jdbcType=VARCHAR},
            </if>
        </set>
        where article_id = #{articleId,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.sandyz.bobtimerserver.pojo.Article">
        <!--@mbg.generated-->
        update article
        set user_id     = #{userId,jdbcType=INTEGER},
            submit_time = #{submitTime,jdbcType=TIMESTAMP},
            `text`      = #{text,jdbcType=VARCHAR},
            topic       = #{topic,jdbcType=VARCHAR}
        where article_id = #{articleId,jdbcType=INTEGER}
    </update>
</mapper>